<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.summit</groupId>
	<artifactId>twitter-message-producer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>twitter-message-process</name>
	<description> Producer twitter messages with ActiveMQ as an AWS AmazonMQ</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<licenses>
		<license>
			<name>The MIT License (MIT)</name>
			<url>http://opensource.org/licenses/MIT</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<uniqueVersion>true</uniqueVersion>
			<layout>default</layout>
		</snapshotRepository>
		<site>
			<id>azure-java-build-docs</id>
			<url>${site.url}/site/</url>
		</site>
	</distributionManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<lombok.version>1.16.18</lombok.version>
		<legal>
      <![CDATA[[INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.]]></legal>
		<site.url>
			https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-java</site.url>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>

		<!--
		https://mvnrepository.com/artifact/com.microsoft.azure/azure-servicebus-jms-spring-boot-starter -->


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-servicebus-jms</artifactId>
			<version>6.0.0-beta.3</version>
		</dependency>-->
		<!--spring for azure service bus -->
		<!--<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter</artifactId>
			<version>6.0.0-beta.4</version> 
			{x-version-update;com.azure.spring:spring-cloud-azure-starter;current} -->
		<!--</dependency>-->
		<!--
		https://mvnrepository.com/artifact/com.microsoft.azure/azure-servicebus -->
		<dependency>
			<groupId>com.microsoft.azure</groupId>
			<artifactId>azure-servicebus</artifactId>
			<version>0.6.0</version>
		</dependency>
	<!--	 https://mvnrepository.com/artifact/com.azure/azure-identity -->
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-identity</artifactId>
			<version>1.8.0</version>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/com.azure/azure-messaging-servicebus -->
		<!--
		https://mvnrepository.com/artifact/com.azure/azure-messaging-servicebus -->
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-messaging-servicebus</artifactId>
			<version>7.12.0</version>
		</dependency>


		<!--Spring JMS-->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jms -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>5.2.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.apache.qpid</groupId>
			<artifactId>qpid-jms-client</artifactId>
			<version>2.0.0</version> <!--
			{x-version-update;org.apache.qpid:qpid-jms-client;external_dependency} -->
		</dependency>
		<dependency>
			<groupId>org.messaginghub</groupId>
			<artifactId>pooled-jms</artifactId>
			<version>3.0.0</version> <!--
			{x-version-update;org.messaginghub:pooled-jms;external_dependency} -->
		</dependency>
		<!-- We should keep these netty dependencies, for the netty version in
		qpid-jms-client is lower than the ones in azure sdks.  -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-buffer</artifactId>
			<version>4.1.84.Final</version> <!--
			{x-version-update;io.netty:netty-buffer;external_dependency} -->
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-common</artifactId>
			<version>4.1.84.Final</version> <!--
			{x-version-update;io.netty:netty-common;external_dependency} -->
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-handler</artifactId>
			<version>4.1.84.Final</version> <!--
			{x-version-update;io.netty:netty-handler;external_dependency} -->
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport</artifactId>
			<version>4.1.84.Final</version> <!--
			{x-version-update;io.netty:netty-transport;external_dependency} -->
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-native-epoll</artifactId>
			<version>4.1.84.Final</version> <!--
			{x-version-update;io.netty:netty-transport-native-epoll;external_dependency} -->
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-native-kqueue</artifactId>
			<version>4.1.84.Final</version> <!--
			{x-version-update;io.netty:netty-transport-native-kqueue;external_dependency} -->
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec-http</artifactId>
			<version>4.1.84.Final</version> <!--
			{x-version-update;io.netty:netty-codec-http;external_dependency} -->
		</dependency>
		<!--spring for azure service bus -->
<dependency>
<groupId>com.fasterxml.jackson.core</groupId>
<artifactId>jackson-core</artifactId>
<version> 2.9.4</version>
</dependency>

<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-amqp</artifactId>
</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>			
				
			</plugin>
			<!--spring for azure service bus -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.2</version> <!--
				{x-version-update;org.apache.maven.plugins:maven-jar-plugin;external_dependency} -->
				<configuration>
					<archive>
						<manifestEntries>
							<Automatic-Module-Name>
								com.azure.spring.cloud.starter.servicebus.jms</Automatic-Module-Name>
						</manifestEntries>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
				<!-- START: Empty Java Doc & Sources -->
				<!-- The following code will generate an empty javadoc/sources
				with just a README.md. This is necessary
             to pass the required checks on Maven. The way this works is by setting the
				classesDirectory
             to a directory that only contains the README.md, which we need to copy. If the
				classesDirectory
             is set to the root, where the README.md lives, it still won't have
				javadocs/sources but the jar file
             will contain a bunch of files that shouldn't be there. The faux sources
				directory is deleted
             and recreated with the README.md being copied every time to guarantee that,
				when building locally,
             it'll have the latest copy of the README.md file.
        -->
				<executions>
					<execution>
						<id>empty-javadoc-jar-with-readme</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>javadoc</classifier>
							<classesDirectory>${project.basedir}/javadocTemp</classesDirectory>
						</configuration>
					</execution>
					<execution>
						<id>empty-source-jar-with-readme</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>sources</classifier>
							<classesDirectory>${project.basedir}/sourceTemp</classesDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version> <!--
				{x-version-update;org.apache.maven.plugins:maven-antrun-plugin;external_dependency} -->
				<executions>
					<execution>
						<id>copy-readme-to-javadocTemp-and-sourceTemp</id>
						<phase>prepare-package</phase>
						<configuration>
							<target>
								<echo>Deleting existing
									${project.basedir}/javadocTemp and
									${project.basedir}/sourceTemp</echo>
								<delete includeEmptyDirs="true" quiet="true">
									<fileset
										dir="${project.basedir}/javadocTemp" />
									<fileset dir="${project.basedir}/sourceTemp" />
								</delete>
								<echo>Copying ${project.basedir}/../README.md to
									${project.basedir}/javadocTemp/README.md
								</echo>
								<copy file="${project.basedir}/../README.md"
									tofile="${project.basedir}/javadocTemp/README.md"
									failonerror="false" />
								<echo>Copying ${project.basedir}/../README.md to
									${project.basedir}/sourceTemp/README.md
								</echo>
								<copy file="${project.basedir}/../README.md"
									tofile="${project.basedir}/sourceTemp/README.md"
									failonerror="false" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<!-- END: Empty Java Doc & Sources -->
			</plugin>
			<!--spring for azure service bus -->
		</plugins>
	</build>
	<!--spring for azure service bus -->
	<!-- Repositories definitions -->
	<repositories>
		<repository>
			<id>ossrh</id>
			<name>Sonatype Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!--spring for azure service bus -->
</project>
